import nmap
from prettytable import PrettyTable
import os

def scan_network(target):
    """Scans the specified target for vulnerabilities using Nmap."""
    nm = nmap.PortScanner()
    try:
        # Perform the scan with specified arguments
        nm.scan(target, arguments='-sV -Pn -O -vv --script vuln')
        print(f"Scan complete for target: {target}")
    except Exception as e:
        # Handle any exceptions that occur during the scan
        print(f"An error occurred while scanning: {e}")
    return nm

def generate_html_report(nm):
    """Generates an HTML report from the Nmap scan results."""
    try:
        # Retrieve the scan results
        hosts = nm.all_hosts()

        if not hosts:
            print("No hosts found.")
            return
        
        # Initialize PrettyTable for tabular representation
        table = PrettyTable()
        table.field_names = ["Host", "Port", "State", "Service", "Version"]

        for host in hosts:
            if 'tcp' not in nm[host]:  # Ensure that the 'tcp' ports are scanned
                print(f"No port information for host: {host}")
                continue

            for port in nm[host]['tcp']:
                port_info = nm[host]['tcp'][port]
                state = port_info.get('state', 'N/A')
                service = port_info.get('name', 'N/A')
                version = port_info.get('version', 'N/A')
                table.add_row([host, port, state, service, version])

        # Write the tabular data to the HTML file
        with open('report.html', 'w') as f:
            f.write("<html><head><title>Scan Report</title></head><body>")
            f.write("<h1>Network Vulnerability Scan Report</h1>")
            f.write("<h2>Scan Results</h2>")
            f.write(f"<pre>{table.get_html_string()}</pre>")
            f.write("</body></html>")

        print("Report saved as 'report.html'")
        print(f"HTML report location: {os.path.abspath('report.html')}")
    
    except Exception as e:
        print(f"An error occurred while generating the report: {e}")

def main():
    """Main function to execute the network scan and generate the report."""
    # Get the target IP address or domain from user input
    target = input("Enter the target IP address or domain: ")

    # Perform the network scan
    nm = scan_network(target)

    # Generate the HTML report
    generate_html_report(nm)

if __name__ == "__main__":
    # Execute the main function if the script is run directly
    main()
